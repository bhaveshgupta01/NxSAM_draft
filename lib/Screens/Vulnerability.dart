import 'dart:async';
import 'package:flutter/material.dart';
import 'package:nxsam_bg/Models/VulData.dart';
import 'package:nxsam_bg/Screens/VulnerabiltyData.dart';

import 'VulnerabiltyData.dart';

class Vulner extends StatelessWidget {
  // final List<String> appl;

  const Vulner({
    Key? key,
    // required this.appl,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        appBar: AppBar(
          leading: IconButton(onPressed:(){Navigator.pop(context);} , icon: const Icon(Icons.arrow_back_ios_outlined), color: Colors.black,),
          title: Text("Vulnerabilities", style: const TextStyle(color: Colors.indigo, fontSize: 20)),
          backgroundColor: Colors.white,
        ),
        body: ListShow(),
      )
    );
  }
}

class ListShow extends StatelessWidget {
  // final List<String> appl;

  ListShow({
    Key? key,
    // required this.appl,
  }) : super(key: key);

  List<VulData> Vulneribility = fetchData();

  @override
  Widget build(BuildContext context) {
    return ListView.builder(
        padding: const EdgeInsets.all(8),
        itemCount: Vulneribility.length,
        itemBuilder: (BuildContext context, index){
          return Card(
            child: InkWell(
              onTap:() {
                Navigator.push(context, MaterialPageRoute(
                builder: (context) =>
                VulnerData(dataHere: Vulneribility[index],)
                ));
                },
              child: ListTile(
                leading: Container(
                width: 15.0,
                height: 15.0,
                decoration: BoxDecoration(
                  shape: BoxShape.circle,
                  color: dotColor(Vulneribility[index].priority),
                  ),
                ),
                title: Text(Vulneribility[index].name),
                subtitle: Text(Vulneribility[index].link),
              ),
            )
          );
        }
    );
  }

  Color dotColor(int n)
  {
    if(n==1) return Colors.red;
    else if (n==2) return Colors.orange;
    else return Colors.yellow;
  }
}